import groupBy from 'lodash/groupBy';
import toArray from 'lodash/toArray';
import QueryString from 'query-string';
import React, { useEffect, useMemo, useState } from 'react';
import { useLocation } from 'react-router-dom';
import styled from 'styled-components';

function useLibraryRequest(url) {
  const [result, setResult] = useState({});

  useEffect(() => {
    if (!url) {
      return;
    }

    setResult(result => ({
      ...result,
      loading: true,
    }));

    fetch(url)
      .then(res => res.json())
      .then(library => {
        setResult(result => ({
          ...result,
          loading: false,
          library,
        }));
      })
      .catch(error =>
        setResult(result => ({
          ...result,
          loading: false,
          error,
        })),
      );
  }, [url]);

  return result;
}

function ShelfPage() {
  const { search } = useLocation();
  const { url } = useMemo(() => QueryString.parse(search), [search]);

  const { library, loading, error } = useLibraryRequest(url);

  if (loading) {
    return 'Loading...';
  }
  if (error) {
    return 'Failed to load!';
  }
  if (library) {
    return (
      <Container>
        <Profile>
          <ProfileName>{library.name}</ProfileName>
          <ProfileLink>{library.url}</ProfileLink>
          <ProfileBio>{library.bio}</ProfileBio>
        </Profile>
        <Lists>
          {library.lists.map(list => (
            <List key={list.name}>
              <ListName>{list.name}</ListName>
              {groupBy(list.books, (_, index) => Math.floor(index / 3))
                .toArray()
                .map(book => (
                  <Book key={book.name}>
                    <BookRow>
                      <BookName>{book.title}</BookName>
                    </BookRow>
                  </Book>
                ))}
            </List>
          ))}
        </Lists>
      </Container>
    );
  }
  return null;
}

const Container = styled.div`
  margin: auto;
  max-width: 1024px;
  padding: 32px 24px;

  display: flex;
  flex-direction: row;

  & > * + * {
    margin-left: 16px;
  }
`;

const Profile = styled.div.attrs({ className: 'block fixed' })`
  max-width: 240px;
`;

const ProfileName = styled.h1``;

const ProfileLink = styled.a``;

const ProfileBio = styled.p``;

const Lists = styled.div.attrs({ className: 'block fixed' })`
  flex-grow: 1;
  display: flex;
  flex-direction: column;

  & > * + * {
    margin-top: 16px;
  }
`;

const List = styled.div.attrs({ className: 'block fixed' })``;

const ListName = styled.h2``;

const Book = styled.div.attrs({ className: 'block fixed' })``;

const BookRow = styled.div`
  display: flex;
`;

const BookName = styled.h3``;

export default ShelfPage;
